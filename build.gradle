/*
buildscript {

//NEW
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

plugins {
    id'java'
    id'application'
    id'com.github.johnrengelman.shadow' version '2.0.4'
}

mainClassName = 'pothi_discord.Main'

version '1.0'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

apply plugin: 'org.springframework.boot'

dependencies {
//    compile 'net.dv8tion:JDA:3.7.1_419'

    compile group: 'junit', name: 'junit', version: '4.11'
    //compile 'net.dv8tion:JDA:3.5.1_340'
    //compile 'com.sedmelluq:lavaplayer:1.2.53'
    compile 'net.dv8tion:JDA:3.8.1_438'
    compile 'com.sedmelluq:lavaplayer:1.3.9'
    compile 'me.xdrop:fuzzywuzzy:1.1.7'

    //jetty
    // http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html
    compile 'org.eclipse.jetty:jetty-maven-plugin:9.4.8.v20171121'
    //compile 'org.eclipse.jetty:jetty-servlets:${jetty.version}'


    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    // compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    //compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.9'

    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20160810'

    // https://mvnrepository.com/artifact/at.mukprojects/giphy4j
    //compile group: 'at.mukprojects', name: 'giphy4j', version: '1.0.1'

    //mongodb + BSON
    // https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
    // compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.2.2'
    compile 'org.mongodb:bson:3.3.0'

    // https://mvnrepository.com/artifact/org.mongodb.morphia/morphia
    compile 'org.mongodb.morphia:morphia:1.3.2'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.8'

    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    // jersey
    compile "javax.ws.rs:jsr311-api:1.1.1"

    compile 'com.sun.jersey:jersey-server:1.13'
    compile 'com.sun.jersey:jersey-core:1.13'
    compile 'com.sun.jersey:jersey-servlet:1.13'

    testCompile "junit:junit-dep:4.10"


    //NEW
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")
}

compileJava.options.encoding = 'UTF-8'
*/



group 'eu.pothi.discord.audio'
version '1.0-SNAPSHOT'

//NEW
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
//NEW
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

compileJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.8
//NEW
//targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    main.java.srcDir "src/main"
    test.java.srcDir "src/test"
}

springBoot {
    mainClass = "pothi_discord.Main"
}

jar {
    from {
        configurations.compile.collect {
            //it.isDirectory() ? it : zipTree(it)
            it
        }
    }
    archiveName = "pothi_discord.jar"
    manifest {
        attributes "Main-Class" : "pothi_discord.Main"
    }

}

dependencies {
    compile group: 'junit', name: 'junit', version: '4.11'
//    compile 'net.dv8tion:JDA:3.6.0_367'
//    compile 'com.sedmelluq:lavaplayer:1.2.63'
    compile 'net.dv8tion:JDA:3.8.1_438'
    compile 'com.sedmelluq:lavaplayer:1.3.9'
    compile 'me.xdrop:fuzzywuzzy:1.1.7'

    //jetty
    compile 'org.eclipse.jetty:jetty-maven-plugin:9.4.8.v20171121'
    //compile 'org.eclipse.jetty:jetty-servlets:${jetty.version}'


    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    // compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    //compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.9'

    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20160810'

    // https://mvnrepository.com/artifact/at.mukprojects/giphy4j
    //compile group: 'at.mukprojects', name: 'giphy4j', version: '1.0.1'

    //mongodb + BSON
    // https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
    // compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.2.2'
    compile 'org.mongodb:bson:3.3.0'

    // https://mvnrepository.com/artifact/org.mongodb.morphia/morphia
    compile 'org.mongodb.morphia:morphia:1.3.2'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.8'

    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    // jersey
    compile "javax.ws.rs:jsr311-api:1.1.1"

    compile 'com.sun.jersey:jersey-server:1.13'
    compile 'com.sun.jersey:jersey-core:1.13'
    compile 'com.sun.jersey:jersey-servlet:1.13'

    testCompile "junit:junit-dep:4.10"


    //NEW
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")

}